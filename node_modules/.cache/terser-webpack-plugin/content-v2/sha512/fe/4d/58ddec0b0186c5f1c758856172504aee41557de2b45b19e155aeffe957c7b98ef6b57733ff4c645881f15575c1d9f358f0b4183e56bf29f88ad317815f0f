{"map":"{\"version\":3,\"sources\":[\"/Users/stephenli/Desktop/to-do/src/StopWatch.js\",\"/Users/stephenli/Desktop/to-do/src/App.js\",\"/Users/stephenli/Desktop/to-do/src/serviceWorker.js\",\"/Users/stephenli/Desktop/to-do/src/index.js\"],\"names\":[\"StopWatch\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"second\",\"setSecond\",\"_useState3\",\"_useState4\",\"minute\",\"setMintue\",\"_useState5\",\"_useState6\",\"hour\",\"setHour\",\"_useState7\",\"_useState8\",\"started\",\"setStarted\",\"_useState9\",\"_useState10\",\"intervalId\",\"setIntervalId\",\"useEffect\",\"console\",\"log\",\"formatedHour\",\"formatedMinute\",\"formatedSecond\",\"react_default\",\"a\",\"createElement\",\"onClick\",\"clearInterval\",\"setInterval\",\"List\",\"_ref\",\"list\",\"index\",\"updateList\",\"deleteList\",\"completeTodo\",\"todoIndex\",\"newTodos\",\"toConsumableArray\",\"isCompleted\",\"removeTodo\",\"splice\",\"className\",\"key\",\"map\",\"todo\",\"App_Todo\",\"App_TodoForm\",\"addTodo\",\"text\",\"concat\",\"Todo\",\"_ref2\",\"style\",\"textDecoration\",\"TodoForm\",\"_ref3\",\"value\",\"setValue\",\"onSubmit\",\"e\",\"preventDefault\",\"type\",\"placeholder\",\"onChange\",\"target\",\"App\",\"lists\",\"setList\",\"newLists\",\"App_List\",\"push\",\"addList\",\"src_StopWatch\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { useState, useEffect } from 'react';\\n\\n\\nconst StopWatch = () => {\\n    const [second, setSecond] = useState(0);\\n    const [minute, setMintue] = useState(0);\\n    const [hour, setHour] = useState(0);\\n    const [started, setStarted] = useState(false);\\n    const [intervalId, setIntervalId] = useState(null);\\n\\n    const startTime = () => {\\n        if (started) {\\n            clearInterval(intervalId);\\n            setStarted(false);\\n            setIntervalId(null);\\n        } else {\\n            setStarted(true);\\n            setIntervalId(() => setInterval(\\n                // need to pass in second as an argument to the setSecond function to update it \\n                () => setSecond(second => second + 1)\\n                , 1000))\\n        }\\n    }\\n\\n    useEffect(() => {\\n        // Same as ComponentDid Update\\n        console.log(second);\\n        if (second > 59) {\\n            setSecond(0);\\n            setMintue(minute + 1);\\n        }\\n\\n        if (minute > 59) {\\n            setMintue(0);\\n            setHour(hour + 1);\\n        }\\n    }, [second, minute, hour])\\n\\n\\n    const formatedHour = hour < 10 ? \\\"0\\\" + hour : hour\\n    const formatedMinute = minute < 10 ? \\\"0\\\" + minute : minute\\n    const formatedSecond = second < 10 ? \\\"0\\\" + second : second\\n\\n    return (\\n        <div>\\n            <p>Hour:{formatedHour}</p>\\n            <p>Minute:{formatedMinute}</p>\\n            <p>Second:{formatedSecond}</p>\\n            <button onClick={startTime}>{started ? \\\"Stop Time\\\" : \\\"Start Time\\\"}</button>\\n        </div>\\n    )\\n}\\n\\n\\nexport default StopWatch;\\n\",\"import React, {useState} from 'react';\\nimport './App.css';\\nimport StopWatch from './StopWatch'\\n\\nconst App = () => {\\n  const [lists, setList] = useState([\\n      [\\n        {\\n          text: \\\"Learn ReactHooks\\\",\\n          isCompleted: false\\n        },\\n        {\\n          text: \\\"Go get boba\\\",\\n          isCompleted: false\\n        },\\n        {\\n          text: \\\"play basketball\\\",\\n          isCompleted: false\\n        }\\n      ]\\n  ])\\n\\n  const updateList = (list, index) => {\\n    const newLists = [...lists];\\n    newLists[index] = list;\\n    setList(newLists);\\n  }\\n  \\n  const addList = () => {\\n    const newLists = [...lists];\\n    const newList = [];\\n    newLists.push(newList);\\n    setList(newLists);\\n  }\\n  \\n  const deleteList = (index) => {\\n    const newLists = [...lists];\\n    newLists.splice(index, 1);\\n    setList(newLists);\\n  }\\n\\n  return(\\n    <div className=\\\"app\\\">\\n      {lists.map((list, index) => (\\n        <div key ={index}>\\n          <List \\n          list={list} \\n          key={index}\\n          index={index}\\n          updateList={updateList}\\n          deleteList={deleteList}\\n          />\\n        </div>\\n      ))}\\n      <button className=\\\"todo-list\\\" onClick={() => addList()}>Add a New List!</button>\\n      <StopWatch/>\\n    </div>\\n  )\\n\\n}\\n\\n\\n\\nconst List = ({list, index, updateList, deleteList}) => {\\n  // want to use the same list from the props\\n  // giving it a new variable meant I was modifying a new one, which mean I was still modifitying the state, but the render was rendinging just the number of list, and not the exact values. \\n\\n  const addTodo = text => {\\n    const newTodos = [...list, { text }];\\n    updateList(newTodos, index)\\n  }\\n  \\n  const completeTodo = todoIndex => {\\n    const newTodos = [...list];\\n    newTodos[todoIndex].isCompleted = !newTodos[todoIndex].isCompleted;\\n    updateList(newTodos, index)\\n  }\\n  \\n  const removeTodo = todoIndex => {\\n    const newTodos = [...list];\\n    newTodos.splice(todoIndex, 1);\\n    updateList(newTodos, index)\\n  }\\n  return (\\n      <div className=\\\"todo-list\\\" key={index}>\\n        <h3>\\n        <div>List {index + 1}</div>\\n        <button onClick={() => deleteList(index)}>X</button>\\n        </h3>\\n        {list.map((todo, index) => (\\n          <Todo \\n            key={index} \\n            todo={todo} \\n            completeTodo={completeTodo}\\n            removeTodo={removeTodo}\\n            index={index}/>\\n        ))}\\n        <TodoForm addTodo={addTodo}/>\\n      </div>\\n  )\\n}\\n\\n\\n\\n\\n\\nconst Todo = ({todo, index, completeTodo, removeTodo}) => {\\n  return(\\n    <div \\n      className=\\\"todo\\\"\\n      style={{textDecoration: todo.isCompleted ? 'line-through' : ''}}\\n    >\\n      {todo.text}\\n      <div>\\n        <button onClick={() => completeTodo(index)}>Complete</button>\\n        <button onClick={() => removeTodo(index)}>X</button>\\n      </div>\\n    </div>\\n  )\\n}\\n\\n\\n\\nconst TodoForm = ({addTodo}) => {\\n  const [value, setValue] = useState('');\\n\\n  const handleSubmit = e => {\\n    e.preventDefault();\\n    if(!value) return;\\n    addTodo(value);\\n    setValue('');\\n  };\\n\\n  return(\\n    <form onSubmit={handleSubmit}>\\n      <input \\n        type=\\\"text\\\"\\n        className=\\\"input\\\"\\n        value={value}\\n        placeholder=\\\"Add new to do...\\\"\\n        onChange={e => setValue(e.target.value)}/>\\n        <button>Add!</button>\\n    </form>\\n  )\\n}\\n\\nexport default App\\n\\n\\n\\n\\n\\n\\n\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,function(e,t,n){e.exports=n(13)},,,,,,function(e,t,n){},function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),c=n(4),r=n.n(c),l=(n(11),n(2)),i=n(1),u=(n(12),function(){var e=Object(a.useState)(0),t=Object(i.a)(e,2),n=t[0],c=t[1],r=Object(a.useState)(0),l=Object(i.a)(r,2),u=l[0],s=l[1],d=Object(a.useState)(0),m=Object(i.a)(d,2),b=m[0],p=m[1],f=Object(a.useState)(!1),v=Object(i.a)(f,2),E=v[0],j=v[1],O=Object(a.useState)(null),k=Object(i.a)(O,2),w=k[0],h=k[1];Object(a.useEffect)(function(){console.log(n),n>59&&(c(0),s(u+1)),u>59&&(s(0),p(b+1))},[n,u,b]);var C=b<10?\"0\"+b:b,x=u<10?\"0\"+u:u,S=n<10?\"0\"+n:n;return o.a.createElement(\"div\",null,o.a.createElement(\"p\",null,\"Hour:\",C),o.a.createElement(\"p\",null,\"Minute:\",x),o.a.createElement(\"p\",null,\"Second:\",S),o.a.createElement(\"button\",{onClick:function(){E?(clearInterval(w),j(!1),h(null)):(j(!0),h(function(){return setInterval(function(){return c(function(e){return e+1})},1e3)}))}},E?\"Stop Time\":\"Start Time\"))}),s=function(e){var t=e.list,n=e.index,a=e.updateList,c=e.deleteList,r=function(e){var o=Object(l.a)(t);o[e].isCompleted=!o[e].isCompleted,a(o,n)},i=function(e){var o=Object(l.a)(t);o.splice(e,1),a(o,n)};return o.a.createElement(\"div\",{className:\"todo-list\",key:n},o.a.createElement(\"h3\",null,o.a.createElement(\"div\",null,\"List \",n+1),o.a.createElement(\"button\",{onClick:function(){return c(n)}},\"X\")),t.map(function(e,t){return o.a.createElement(d,{key:t,todo:e,completeTodo:r,removeTodo:i,index:t})}),o.a.createElement(m,{addTodo:function(e){var o=[].concat(Object(l.a)(t),[{text:e}]);a(o,n)}}))},d=function(e){var t=e.todo,n=e.index,a=e.completeTodo,c=e.removeTodo;return o.a.createElement(\"div\",{className:\"todo\",style:{textDecoration:t.isCompleted?\"line-through\":\"\"}},t.text,o.a.createElement(\"div\",null,o.a.createElement(\"button\",{onClick:function(){return a(n)}},\"Complete\"),o.a.createElement(\"button\",{onClick:function(){return c(n)}},\"X\")))},m=function(e){var t=e.addTodo,n=Object(a.useState)(\"\"),c=Object(i.a)(n,2),r=c[0],l=c[1];return o.a.createElement(\"form\",{onSubmit:function(e){e.preventDefault(),r&&(t(r),l(\"\"))}},o.a.createElement(\"input\",{type:\"text\",className:\"input\",value:r,placeholder:\"Add new to do...\",onChange:function(e){return l(e.target.value)}}),o.a.createElement(\"button\",null,\"Add!\"))},b=function(){var e=Object(a.useState)([[{text:\"Learn ReactHooks\",isCompleted:!1},{text:\"Go get boba\",isCompleted:!1},{text:\"play basketball\",isCompleted:!1}]]),t=Object(i.a)(e,2),n=t[0],c=t[1],r=function(e,t){var a=Object(l.a)(n);a[t]=e,c(a)},d=function(e){var t=Object(l.a)(n);t.splice(e,1),c(t)};return o.a.createElement(\"div\",{className:\"app\"},n.map(function(e,t){return o.a.createElement(\"div\",{key:t},o.a.createElement(s,{list:e,key:t,index:t,updateList:r,deleteList:d}))}),o.a.createElement(\"button\",{className:\"todo-list\",onClick:function(){return function(){var e=Object(l.a)(n);e.push([]),c(e)}()}},\"Add a New List!\"),o.a.createElement(u,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));r.a.render(o.a.createElement(b,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[5,1,2]]]);","extractedComments":[]}