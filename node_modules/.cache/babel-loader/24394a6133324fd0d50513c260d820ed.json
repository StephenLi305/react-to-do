{"ast":null,"code":"import _slicedToArray from \"/Users/stephenli/Desktop/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephenli/Desktop/to-do/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState([[{\n    text: \"Learn ReactHooks\",\n    isCompleted: false\n  }, {\n    text: \"Go get boba\",\n    isCompleted: false\n  }, {\n    text: \"play basketball\",\n    isCompleted: false\n  }], [{\n    text: \"Learn ReactHooks\",\n    isCompleted: false\n  }, {\n    text: \"Go get boba\",\n    isCompleted: false\n  }, {\n    text: \"play basketball\",\n    isCompleted: false\n  }]]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lists = _useState2[0],\n        setList = _useState2[1];\n\n  const updateList = (list, index) => {\n    const newList = [...lists];\n    newList[index] = list;\n    setList(newList);\n  };\n\n  const addList = () => {\n    const newLists = [...lists];\n    const newList = [{\n      text: \"play basketball\",\n      isCompleted: false\n    }];\n    newLists.push(newList);\n    setList(newLists);\n    console.log(newLists);\n  };\n\n  const deleteList = index => {\n    const newLists = [...lists];\n    newLists.splice(index, 1); // let first = newLists.slice(0, index);\n    // let second = newLists.slice(index + 1);\n    // first = first.concat(second)\n    // console.log(newLists, index, first)\n\n    setList(first);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, lists.map((list, index) => React.createElement(List, {\n    list: list,\n    key: index,\n    index: index,\n    updateList: updateList,\n    deleteList: deleteList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"todo-list\",\n    onClick: () => addList(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Add a New List!\"));\n};\n\nconst List = ({\n  list,\n  index,\n  updateList,\n  deleteList\n}) => {\n  const _useState3 = useState(list),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1];\n\n  const addTodo = text => {\n    const newTodo = [...todos, {\n      text\n    }];\n    setTodos(newTodo);\n    updateList(newTodo, index);\n  };\n\n  const completeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo[todoIndex].isCompleted = !newTodo[todoIndex].isCompleted;\n    setTodos(newTodo);\n    updateList(newTodo, index);\n  };\n\n  const removeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo.splice(todoIndex, 1);\n    setTodos(newTodo);\n    updateList(newTodo, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-list\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"List \", index + 1), todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }));\n};\n\nconst Todo = ({\n  todo,\n  index,\n  completeTodo,\n  removeTodo\n}) => {\n  return React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todo.isCompleted ? 'line-through' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, todo.text, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => completeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Complete\"), React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"X\")));\n};\n\nconst TodoForm = ({\n  addTodo\n}) => {\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        value = _useState6[0],\n        setValue = _useState6[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add new to do...\",\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Add!\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenli/Desktop/to-do/src/App.js"],"names":["React","useState","App","text","isCompleted","lists","setList","updateList","list","index","newList","addList","newLists","push","console","log","deleteList","splice","first","map","List","todos","setTodos","addTodo","newTodo","completeTodo","todoIndex","removeTodo","todo","Todo","textDecoration","TodoForm","value","setValue","handleSubmit","e","preventDefault","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [lists, setList] = useState([\n      [\n        {\n          text: \"Learn ReactHooks\",\n          isCompleted: false\n        },\n        {\n          text: \"Go get boba\",\n          isCompleted: false\n        },\n        {\n          text: \"play basketball\",\n          isCompleted: false\n        }\n      ],\n      [\n      {\n        text: \"Learn ReactHooks\",\n        isCompleted: false\n      },\n      {\n        text: \"Go get boba\",\n        isCompleted: false\n      },\n      {\n        text: \"play basketball\",\n        isCompleted: false\n      }\n    ]\n  ])\n\n\n\n  const updateList = (list, index) => {\n    const newList = [...lists];\n    newList[index] = list;\n    setList(newList);\n\n  }\n  \n  const addList = () => {\n    const newLists = [...lists];\n    const newList = [{\n      text: \"play basketball\",\n      isCompleted: false\n    }];\n    newLists.push(newList);\n    setList(newLists);\n    console.log(newLists)\n  }\n\n  const deleteList = (index) => {\n    const newLists = [...lists];\n    newLists.splice(index, 1);\n    // let first = newLists.slice(0, index);\n    // let second = newLists.slice(index + 1);\n    // first = first.concat(second)\n    // console.log(newLists, index, first)\n    setList(first);\n  }\n\n  return(\n    <div className=\"app\">\n      {lists.map((list, index) => (\n\n        <List \n        list={list} \n        key={index}\n        index={index}\n        updateList={updateList}\n        deleteList={deleteList}\n        />\n      ))}\n      <button className=\"todo-list\" onClick={() => addList()}>Add a New List!</button>\n    </div>\n  )\n\n}\n\n\n\nconst List = ({list, index, updateList, deleteList}) => {\n  const [todos, setTodos] = useState(\n    list\n  )\n\n  const addTodo = text => {\n    const newTodo = [...todos, { text }];\n    setTodos(newTodo);\n    updateList(newTodo, index)\n  }\n  \n  const completeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo[todoIndex].isCompleted = !newTodo[todoIndex].isCompleted;\n    setTodos(newTodo);\n    updateList(newTodo, index)\n  }\n  \n  const removeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo.splice(todoIndex, 1);\n    setTodos(newTodo);\n    updateList(newTodo, index)\n  }\n  return (\n      <div className=\"todo-list\" key={index}>\n        <h3>\n          List {index + 1}\n        </h3>\n        {todos.map((todo, index) => (\n          <Todo \n            key={index} \n            todo={todo} \n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            index={index}/>\n        ))}\n        <TodoForm addTodo={addTodo}/>\n      </div>\n  )\n}\n\n\n\n\n\nconst Todo = ({todo, index, completeTodo, removeTodo}) => {\n  return(\n    <div \n      className=\"todo\"\n      style={{textDecoration: todo.isCompleted ? 'line-through' : ''}}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>X</button>\n      </div>\n    </div>\n  )\n}\n\n\n\nconst TodoForm = ({addTodo}) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        className=\"input\"\n        value={value}\n        placeholder=\"Add new to do...\"\n        onChange={e => setValue(e.target.value)}/>\n        <button>Add!</button>\n    </form>\n  )\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}