{"ast":null,"code":"import _slicedToArray from \"/Users/stephenli/Desktop/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/stephenli/Desktop/to-do/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState([[{\n    text: \"Learn ReactHooks\",\n    isCompleted: false\n  }, {\n    text: \"Go get boba\",\n    isCompleted: false\n  }, {\n    text: \"play basketball\",\n    isCompleted: false\n  }], [{\n    text: \"Learn ReactHooks\",\n    isCompleted: false\n  }, {\n    text: \"Go get boba\",\n    isCompleted: false\n  }, {\n    text: \"play basketball\",\n    isCompleted: false\n  }]]),\n        _useState2 = _slicedToArray(_useState, 2),\n        lists = _useState2[0],\n        setList = _useState2[1];\n\n  const updateList = (list, index) => {\n    const newList = [...lists];\n    newList[index] = list;\n    setList(newList);\n  };\n\n  const addList = () => {\n    const newLists = lists;\n    const newList = [{\n      text: \"play basketball\",\n      isCompleted: false\n    }];\n    newLists.push(newList);\n    console.log(newLists);\n    setList(newLists); // console.log(\"hi\")\n  };\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, lists.map((list, index) => React.createElement(List, {\n    list: list,\n    key: index,\n    index: index,\n    updateList: updateList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: () => addList(),\n    className: \"todo-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"add new list\"));\n};\n\nconst List = ({\n  list,\n  index,\n  updateList\n}) => {\n  const _useState3 = useState(list),\n        _useState4 = _slicedToArray(_useState3, 2),\n        todos = _useState4[0],\n        setTodos = _useState4[1]; // console.log(todos, index)\n\n\n  const addTodo = text => {\n    const newTodo = [...todos, {\n      text\n    }];\n    setTodos(newTodo);\n    updateList(newTodo, index);\n  };\n\n  const completeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo[todoIndex].isCompleted = !newTodo[todoIndex].isCompleted;\n    setTodos(newTodo);\n    updateList(newTodo, index);\n  };\n\n  const removeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo.splice(todoIndex, 1);\n    setTodos(newTodo);\n    updateList(newTodo, index);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"todo-list\",\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"List \", index + 1), todos.map((todo, index) => React.createElement(Todo, {\n    key: index,\n    todo: todo,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }));\n};\n\nconst Todo = ({\n  todo,\n  index,\n  completeTodo,\n  removeTodo\n}) => {\n  return React.createElement(\"div\", {\n    className: \"todo\",\n    style: {\n      textDecoration: todo.isCompleted ? 'line-through' : ''\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, todo.text, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => completeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"Complete\"), React.createElement(\"button\", {\n    onClick: () => removeTodo(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, \"X\")));\n};\n\nconst TodoForm = ({\n  addTodo\n}) => {\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        value = _useState6[0],\n        setValue = _useState6[1];\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input\",\n    value: value,\n    placeholder: \"Add new to do...\",\n    onChange: e => setValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Add!\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/stephenli/Desktop/to-do/src/App.js"],"names":["React","useState","App","text","isCompleted","lists","setList","updateList","list","index","newList","addList","newLists","push","console","log","map","List","todos","setTodos","addTodo","newTodo","completeTodo","todoIndex","removeTodo","splice","todo","Todo","textDecoration","TodoForm","value","setValue","handleSubmit","e","preventDefault","target"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [lists, setList] = useState([\n      [\n        {\n          text: \"Learn ReactHooks\",\n          isCompleted: false\n        },\n        {\n          text: \"Go get boba\",\n          isCompleted: false\n        },\n        {\n          text: \"play basketball\",\n          isCompleted: false\n        }\n      ],\n      [\n      {\n        text: \"Learn ReactHooks\",\n        isCompleted: false\n      },\n      {\n        text: \"Go get boba\",\n        isCompleted: false\n      },\n      {\n        text: \"play basketball\",\n        isCompleted: false\n      }\n    ]\n  ])\n\n  const updateList = (list, index) => {\n    const newList = [...lists];\n    newList[index] = list;\n    setList(newList);\n\n  }\n  \n  const addList = () => {\n    const newLists = lists;\n    const newList = [{\n      text: \"play basketball\",\n      isCompleted: false\n    }];\n    newLists.push(newList);\n    console.log(newLists)\n    setList(newLists);\n    // console.log(\"hi\")\n  }\n\n\n\n  return(\n    <div className=\"app\">\n      {lists.map((list, index) => (\n\n        <List \n        list={list} \n        key={index}\n        index={index}\n        updateList={updateList}\n        />\n      ))}\n      <button \n        onClick={() => addList()}\n        className=\"todo-list\">add new list</button>\n    </div>\n  )\n\n}\n\n\n\nconst List = ({list, index, updateList}) => {\n  const [todos, setTodos] = useState(\n    list\n  )\n\n  // console.log(todos, index)\n  const addTodo = text => {\n    const newTodo = [...todos, { text }];\n    setTodos(newTodo);\n    updateList(newTodo, index)\n  }\n  \n  const completeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo[todoIndex].isCompleted = !newTodo[todoIndex].isCompleted;\n    setTodos(newTodo);\n    updateList(newTodo, index)\n  }\n  \n  const removeTodo = todoIndex => {\n    const newTodo = [...todos];\n    newTodo.splice(todoIndex, 1);\n    setTodos(newTodo);\n    updateList(newTodo, index)\n  }\n  return (\n      <div className=\"todo-list\" key={index}>\n        <h3>List {index + 1}</h3>\n        {todos.map((todo, index) => (\n          <Todo \n            key={index} \n            todo={todo} \n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            index={index}/>\n        ))}\n        <TodoForm addTodo={addTodo}/>\n      </div>\n  )\n}\n\n\n\n\n\nconst Todo = ({todo, index, completeTodo, removeTodo}) => {\n  return(\n    <div \n      className=\"todo\"\n      style={{textDecoration: todo.isCompleted ? 'line-through' : ''}}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Complete</button>\n        <button onClick={() => removeTodo(index)}>X</button>\n      </div>\n    </div>\n  )\n}\n\n\n\nconst TodoForm = ({addTodo}) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if(!value) return;\n    addTodo(value);\n    setValue('');\n  };\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\"\n        className=\"input\"\n        value={value}\n        placeholder=\"Add new to do...\"\n        onChange={e => setValue(e.target.value)}/>\n        <button>Add!</button>\n    </form>\n  )\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}